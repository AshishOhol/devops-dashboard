# Kubernetes Deployments Configuration
# 
# This file defines deployments for both frontend and backend applications.
# Deployments manage the desired state of applications, including:
# - Number of replicas (instances) running
# - Rolling updates with zero downtime
# - Health checks and automatic restarts
# - Resource allocation and limits

# FRONTEND DEPLOYMENT
# Manages the React dashboard application

# API version for Deployment resources
apiVersion: apps/v1

# Resource type - Deployment manages a set of identical pods
kind: Deployment

# Metadata for the frontend deployment
metadata:
  # Name of this deployment
  name: dashboard-frontend
  # Namespace where this deployment will be created
  namespace: devops-dashboard

# Deployment specification
spec:
  # Number of pod replicas to run (2 for high availability)
  replicas: 2
  
  # Selector defines which pods this deployment manages
  selector:
    matchLabels:
      # Pods with this label will be managed by this deployment
      app: dashboard-frontend
  
  # Template for creating new pods
  template:
    # Metadata for pods created from this template
    metadata:
      labels:
        # Label that matches the selector above
        app: dashboard-frontend
    
    # Pod specification
    spec:
      # Container definitions
      containers:
      # Frontend container running the React application
      - name: frontend
        # Docker image to use (should be built and pushed to registry)
        image: devops-dashboard/frontend:latest
        # Ports that the container exposes
        ports:
        # Nginx serves the React app on port 80
        - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dashboard-backend
  namespace: devops-dashboard
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dashboard-backend
  template:
    metadata:
      labels:
        app: dashboard-backend
    spec:
      containers:
      - name: backend
        image: devops-dashboard/backend:latest
        ports:
        - containerPort: 3001
        env:
        - name: NODE_ENV
          value: "production"